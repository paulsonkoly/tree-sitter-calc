{
  "name": "calc",
  "rules": {
    "program": {
      "type": "REPEAT",
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "block"
          },
          {
            "type": "SYMBOL",
            "name": "_nl"
          }
        ]
      }
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ";"
        },
        {
          "type": "PATTERN",
          "value": "[^\\n]*"
        }
      ]
    },
    "block": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "_curlyblock"
        },
        {
          "type": "SYMBOL",
          "name": "_statement"
        }
      ]
    },
    "_curlyblock": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "delim_obrace"
        },
        {
          "type": "SYMBOL",
          "name": "_nl"
        },
        {
          "type": "SYMBOL",
          "name": "_statements"
        },
        {
          "type": "SYMBOL",
          "name": "delim_cbrace"
        }
      ]
    },
    "delim_obrace": {
      "type": "STRING",
      "value": "{"
    },
    "delim_cbrace": {
      "type": "STRING",
      "value": "}"
    },
    "_statements": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_statement"
            },
            {
              "type": "SYMBOL",
              "name": "_nl"
            }
          ]
        }
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "loop"
        },
        {
          "type": "SYMBOL",
          "name": "conditional"
        },
        {
          "type": "SYMBOL",
          "name": "returning"
        },
        {
          "type": "SYMBOL",
          "name": "assignment"
        },
        {
          "type": "SYMBOL",
          "name": "forloop"
        },
        {
          "type": "SYMBOL",
          "name": "yield"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "_nl": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "REPEAT1",
        "content": {
          "type": "STRING",
          "value": "\n"
        }
      }
    },
    "loop": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "kwwhile"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "kwwhile": {
      "type": "STRING",
      "value": "while"
    },
    "conditional": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "kwif"
          },
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "block"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "elseblock"
                  }
                ]
              },
              {
                "type": "SYMBOL",
                "name": "block"
              }
            ]
          }
        ]
      }
    },
    "kwif": {
      "type": "STRING",
      "value": "if"
    },
    "elseblock": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "kwelse"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "kwelse": {
      "type": "STRING",
      "value": "else"
    },
    "returning": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "kwreturn"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "kwreturn": {
      "type": "STRING",
      "value": "return"
    },
    "assignment": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "variable_name"
        },
        {
          "type": "SYMBOL",
          "name": "assignop"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "assignop": {
      "type": "STRING",
      "value": "="
    },
    "forloop": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "kwfor"
        },
        {
          "type": "SYMBOL",
          "name": "variable_name"
        },
        {
          "type": "SYMBOL",
          "name": "larrowop"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "kwfor": {
      "type": "STRING",
      "value": "for"
    },
    "larrowop": {
      "type": "STRING",
      "value": "<-"
    },
    "yield": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "kwyield"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "kwyield": {
      "type": "STRING",
      "value": "yield"
    },
    "_expression": {
      "type": "SYMBOL",
      "name": "_relational"
    },
    "relationalop": {
      "type": "PATTERN",
      "value": "<|<=|==|!=|>|<|>=|>"
    },
    "_relational": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_logic"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "relationalop"
                },
                {
                  "type": "SYMBOL",
                  "name": "_logic"
                }
              ]
            }
          }
        ]
      }
    },
    "logicop": {
      "type": "PATTERN",
      "value": "[&|]"
    },
    "_logic": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_addsub"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "logicop"
                },
                {
                  "type": "SYMBOL",
                  "name": "_addsub"
                }
              ]
            }
          }
        ]
      }
    },
    "addsubop": {
      "type": "PATTERN",
      "value": "[+\\-]"
    },
    "_addsub": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_divmul"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "addsubop"
                },
                {
                  "type": "SYMBOL",
                  "name": "_divmul"
                }
              ]
            }
          }
        ]
      }
    },
    "divmulop": {
      "type": "PATTERN",
      "value": "[*\\/%]"
    },
    "_divmul": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_unary"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "divmulop"
                },
                {
                  "type": "SYMBOL",
                  "name": "_unary"
                }
              ]
            }
          }
        ]
      }
    },
    "unaryop": {
      "type": "PATTERN",
      "value": "[#\\-!]"
    },
    "_unary": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "unaryop"
            },
            {
              "type": "SYMBOL",
              "name": "_index"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "_index"
        }
      ]
    },
    "_index": {
      "type": "PREC_LEFT",
      "value": 0,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_atom"
              },
              {
                "type": "SYMBOL",
                "name": "delim_obracket"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "delim_colon"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "delim_cbracket"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_atom"
              },
              {
                "type": "SYMBOL",
                "name": "delim_obracket"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "delim_cbracket"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "_atom"
          }
        ]
      }
    },
    "delim_obracket": {
      "type": "STRING",
      "value": "["
    },
    "delim_cbracket": {
      "type": "STRING",
      "value": "]"
    },
    "delim_colon": {
      "type": "STRING",
      "value": ":"
    },
    "_atom": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "func_def"
        },
        {
          "type": "SYMBOL",
          "name": "call"
        },
        {
          "type": "SYMBOL",
          "name": "int_lit"
        },
        {
          "type": "SYMBOL",
          "name": "float_lit"
        },
        {
          "type": "SYMBOL",
          "name": "bool_lit"
        },
        {
          "type": "SYMBOL",
          "name": "string_lit"
        },
        {
          "type": "SYMBOL",
          "name": "array_lit"
        },
        {
          "type": "SYMBOL",
          "name": "variable_name"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "delim_oparen"
            },
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "SYMBOL",
              "name": "delim_cparen"
            }
          ]
        }
      ]
    },
    "delim_oparen": {
      "type": "STRING",
      "value": "("
    },
    "delim_cparen": {
      "type": "STRING",
      "value": ")"
    },
    "func_def": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "parameters"
        },
        {
          "type": "SYMBOL",
          "name": "arrowop"
        },
        {
          "type": "SYMBOL",
          "name": "block"
        }
      ]
    },
    "arrowop": {
      "type": "STRING",
      "value": "->"
    },
    "parameters": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "delim_oparen"
              },
              {
                "type": "SYMBOL",
                "name": "delim_cparen"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "delim_oparen"
              },
              {
                "type": "SYMBOL",
                "name": "variable_name"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "delim_comma"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "variable_name"
                    }
                  ]
                }
              },
              {
                "type": "SYMBOL",
                "name": "delim_cparen"
              }
            ]
          }
        ]
      }
    },
    "delim_comma": {
      "type": "STRING",
      "value": ","
    },
    "array_lit": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "delim_obracket"
              },
              {
                "type": "SYMBOL",
                "name": "delim_cbracket"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "delim_obracket"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "delim_comma"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_expression"
                    }
                  ]
                }
              },
              {
                "type": "SYMBOL",
                "name": "delim_cbracket"
              }
            ]
          }
        ]
      }
    },
    "call": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "variable_name"
          },
          {
            "type": "SYMBOL",
            "name": "_arguments"
          }
        ]
      }
    },
    "_arguments": {
      "type": "PREC",
      "value": 10,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "delim_oparen"
              },
              {
                "type": "SYMBOL",
                "name": "delim_cparen"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "delim_oparen"
              },
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "REPEAT",
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "delim_comma"
                    },
                    {
                      "type": "SYMBOL",
                      "name": "_expression"
                    }
                  ]
                }
              },
              {
                "type": "SYMBOL",
                "name": "delim_cparen"
              }
            ]
          }
        ]
      }
    },
    "int_lit": {
      "type": "PATTERN",
      "value": "\\d+"
    },
    "float_lit": {
      "type": "PATTERN",
      "value": "\\d+(\\.\\d+)?"
    },
    "bool_lit": {
      "type": "PATTERN",
      "value": "true|false"
    },
    "string_lit": {
      "type": "PATTERN",
      "value": "\"([^\"]|\\\\\")*\""
    },
    "variable_name": {
      "type": "PATTERN",
      "value": "[a-z]+"
    }
  },
  "extras": [
    {
      "type": "STRING",
      "value": " "
    },
    {
      "type": "STRING",
      "value": "\t"
    },
    {
      "type": "SYMBOL",
      "name": "comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

